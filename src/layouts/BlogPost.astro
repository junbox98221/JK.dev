---
import Layout from './Layout.astro';
import FormattedDate from '../components/FormattedDate.astro';
import ShareButtons from '../components/ShareButtons.astro';
import TagList from '../components/TagList.astro';
import OptimizedHeroImage from '../components/OptimizedHeroImage.astro';
import './styles/markdown.css';
import type { BlogPost } from '../content/config';

export type Props = BlogPost & { slug?: string };
const { title, description, pubDate, heroImage, tags = [], slug } = Astro.props;

let canonicalURL;
try {
  canonicalURL = new URL(Astro.url.pathname, Astro.site?.origin || 'https://example.com');
} catch (error) {
  console.error('Error creating canonical URL:', error);
  canonicalURL = new URL('https://example.com');
}
---

<Layout
  title={title}
  description={description}
  type="article"
  heroImage={heroImage}
  pubDate={pubDate}
  tags={tags}
>
  <article class="prose prose-zinc mx-auto max-w-4xl dark:prose-invert lg:prose-lg">
    <div class="mb-12">
      <h1
        class="mb-4 text-4xl font-bold tracking-tight text-zinc-900 dark:text-zinc-100 sm:text-5xl"
      >
        {title}
      </h1>

      <div class="mb-6 flex items-center gap-x-4 text-sm text-zinc-500 dark:text-zinc-400">
        <FormattedDate date={pubDate} />
      </div>

      <TagList tags={tags} class="mt-2" />
    </div>

    <!-- Hero image with Astro Image optimization -->
    {
      heroImage && slug && (
        <div class="relative mb-8 overflow-hidden shadow-lg sm:mb-12">
          <div class="aspect-[16/9] w-full">
            <OptimizedHeroImage
              slug={slug}
              heroImage={heroImage}
              title={title}
              class="h-full w-full object-cover"
              fetchpriority="high"
              loading="eager"
              decoding="async"
            />
          </div>
          <div class="absolute inset-0 bg-gradient-to-t from-black/30 to-transparent" />
        </div>
      )
    }

    <div class="markdown-content">
      <slot />
    </div>

    <!-- Add the like button after the content -->
    <div class="mt-12 border-t border-zinc-200 pt-8 dark:border-zinc-800">
      <div class="flex flex-col items-center justify-between gap-6 sm:flex-row">
        <ShareButtons url={canonicalURL.toString()} title={title} />
        <!-- Convert URL to string -->
      </div>
    </div>

    {
      pubDate && (
        <div class="mt-8 text-sm italic text-zinc-500 dark:text-zinc-400">
          Last updated on <FormattedDate date={pubDate} />
        </div>
      )
    }
  </article>

  <slot name="after-article" />
</Layout>


<style>
  /* Enhanced hero image styling */
  article img:first-of-type {
    border-radius: 1rem;
    box-shadow:
      0 10px 25px -5px rgba(0, 0, 0, 0.1),
      0 8px 10px -6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
  }

  article img:first-of-type:hover {
    transform: scale(1.01);
  }

  /* Article entrance animation */
  .article-entering {
    animation: article-fade-in 0.8s ease-out forwards;
  }

  @keyframes article-fade-in {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Rest of the styles remain unchanged... */
</style>
