---
import { SEO, Props as SeoType } from 'astro-seo';
import type { WithContext, BlogPosting, WebSite } from 'schema-dts';
import type { BlogPost } from '../content/config';

const SITE_CONFIG = {
  name: 'JK.dev',
  defaultSection: 'Technology',
  defaultImage: '/logo.png',
  logo: '/logo.png',
  language: 'ko-KR',
} as const;

export interface Props extends BlogPost {
  type?: 'website' | 'article';
}

const {
  title,
  description = 'JK.dev - 프론트엔드 개발과 성능 최적화에 관한 기술 블로그',
  type = 'website',
  heroImage = SITE_CONFIG.defaultImage,
  pubDate,
  tags = [],
} = Astro.props;

const author = 'JK';
const siteUrl = Astro.site?.href;
const canonicalUrl = new URL(Astro.url.pathname, siteUrl).href;

const blogPostSchema: WithContext<BlogPosting> = {
  '@context': 'https://schema.org',
  '@type': 'BlogPosting',
  headline: title,
  description,
  image: heroImage,
  author: {
    '@type': 'Person',
    name: author,
    url: siteUrl,
  },
  publisher: {
    '@type': 'Organization',
    name: SITE_CONFIG.name,
    logo: {
      '@type': 'ImageObject',
      url: new URL(SITE_CONFIG.logo, siteUrl).href,
    },
  },
  datePublished: pubDate?.toISOString(),
  dateModified: pubDate?.toISOString(),
  mainEntityOfPage: {
    '@type': 'WebPage',
    '@id': canonicalUrl,
  },
  keywords: tags.join(', '),
  inLanguage: SITE_CONFIG.language,
  url: canonicalUrl,
};

const websiteSchema: WithContext<WebSite> = {
  '@context': 'https://schema.org',
  '@type': 'WebSite',
  name: SITE_CONFIG.name,
  description: '프론트엔드 개발에 관한 기술 블로그',
  url: siteUrl,
  author: {
    '@type': 'Person',
    name: 'JK',
  },
  inLanguage: SITE_CONFIG.language,
};

const structuredData = type === 'article' ? blogPostSchema : websiteSchema;

const openGraphConfig: SeoType['openGraph'] = {
  basic: {
    title,
    type,
    url: canonicalUrl,
    image: heroImage,
  },
  optional: {
    description,
    siteName: SITE_CONFIG.name,
    locale: 'ko_KR',
  },
  image: {
    alt: title,
  },
  article:
    type === 'article' && pubDate
      ? {
          publishedTime: pubDate?.toISOString(),
          modifiedTime: pubDate?.toISOString(),
          authors: [author],
          section: SITE_CONFIG.defaultSection,
          tags,
        }
      : undefined,
};

const twitterConfig: SeoType['twitter'] = {
  card: 'summary_large_image',
  title,
  description,
  image: heroImage,
  imageAlt: title,
};
---

<SEO
  title={title}
  description={description}
  canonical={canonicalUrl}
  openGraph={openGraphConfig}
  twitter={twitterConfig}
/>

<!-- Structured Data (JSON-LD) -->
<script type="application/ld+json" set:html={JSON.stringify(structuredData, null, 2)} />
